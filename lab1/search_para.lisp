;   Name    :   Manisha Meena
;   ID      :   2015KUCP
;   Sub     :   Operations on string (search and replace)

    (defvar str)
    (defvar count)
    (defvar search_word)
    (defvar c)
    (defvar rw)
    (defvar sub)

    (setq str "Books are our real friends. They are our guides. We can learn everything from them. New Journey is ready to start with new experiences with every new page.") ; use \\, for comma
    (terpri)(terpri)
    (write-string str)
    (terpri)(terpri)
    (princ "Enter the word want to search : ")
    (setq search_word(read))
    (setq count 0)
    (setq c 0)
    (terpri)
    (with-input-from-string (st str)
        (do ( (num (read st nil 'the-end) (read st nil 'the-end)) )
            ((eql num 'the-end ) )   
            (setq d (length (write-to-string num)))           
            (if (or (string= num search_word) (and ( = (- d 1) (string/= search_word num)) (char= #\. (aref (write-to-string num) (- d 1)))))
              (progn
                (format t "Given word is found at ~Dth position and ~D" count c) 
                (terpri)
                (princ "      Enter the replacing word : " )
                (setq rw(read-line))                               
                (setq d (+ c d))
                (setq sub(subseq str d ))
                (loop for k from c to (- d 1)
                    do(setq str(delete (aref str c) str :start c :count 1))
                )                
                (setq str(concatenate 'string (subseq str 0 c ) rw))
                (setq str(concatenate 'string str sub))               
                (setq num rw)
                (setq c (- c 2))
                (terpri)
              )
            )
            (setq c (+ c (length (write-to-string num)) 1 ))
            (setq count( + count 1))             
        )
    )
    (terpri)
    (format t "_____________________Modified Paragraph_________________________________")
    (terpri)
    (print str)
    (terpri)
    (format t "________________________________________________________________________")
    (terpri)(terpri)

